name: CI - JFrog Xray scan

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_NAME: react-vuln-demo
  BUILD_NUMBER: ${{ github.run_id }}

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install JFrog CLI and configure (uses repo secrets)
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: latest
          jfrog_url: ${{ secrets.JFROG_URL }}
          jfrog_user: ${{ secrets.JFROG_USERNAME }}
          jfrog_password: ${{ secrets.JFROG_API_KEY }}

      - name: Install dependencies and collect build-info (robust)
        run: |
          set -e
          echo "Attempting jf rt npm-install (preferred: installs and collects build-info)"
          if jf rt npm-install --build-name=${{ env.BUILD_NAME }} --build-number=${{ env.BUILD_NUMBER }}; then
            echo "jf rt npm-install succeeded"
          else
            echo "jf rt npm-install failed — falling back to npm install"
            # remove node_modules to ensure a clean install on runners
            rm -rf node_modules
            npm install
            # try collecting build-info again; do not fail the job if this second attempt fails
            if jf rt npm-install --build-name=${{ env.BUILD_NAME }} --build-number=${{ env.BUILD_NUMBER }}; then
              echo "jf rt npm-install succeeded after fallback"
            else
              echo "Warning: jf rt npm-install still failed after fallback — continuing but build-info may be incomplete"
            fi
          fi

      - name: (Optional) Run build (create build artifacts)
        run: |
          npm run build

      - name: Publish build-info to Artifactory
        run: |
          jf rt bp ${{ env.BUILD_NAME }} ${{ env.BUILD_NUMBER }}

      - name: Trigger Xray scan
        run: |
          jf rt build-scan ${{ env.BUILD_NAME }} ${{ env.BUILD_NUMBER }} --vuln

      - name: Show build-scan result (file)
        run: |
          jf rt build-scan ${{ env.BUILD_NAME }} ${{ env.BUILD_NUMBER }} --vuln --json > xray_scan_result.json
          cat xray_scan_result.json
